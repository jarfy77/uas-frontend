{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  user: null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: \"\"\n};\nexport const LoginUser = createAsyncThunk(\"user/LoginUser\", async (user, thunkAPI) => {//     try {\n  //         const response = await axios.post('http://localhost:5000/login', {\n  //             email: user.email,\n  //             password: user.password\n  //         });\n  //         return response.data;\n  //     } catch (error) {\n  //         if(error.response){\n  //             const message = error.response.data.msg;\n  //             return thunkAPI.rejectWithValue(message);\n  //         }\n  //     }\n  // });\n  // export const getMe = createAsyncThunk(\"user/getMe\", async(_, thunkAPI) => {\n  //     try {\n  //         const response = await axios.get('http://localhost:5000/me');\n  //         return response.data;\n  //     } catch (error) {\n  //         if(error.response){\n  //             const message = error.response.data.msg;\n  //             return thunkAPI.rejectWithValue(message);\n  //         }\n  //     }\n});\nexport const LogOut = createAsyncThunk(\"user/LogOut\", async () => {\n  await axios.delete('http://localhost:5000/logout');\n});\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    reset: state => initialState\n  },\n  extraReducers: builder => {\n    builder.addCase(LoginUser.pending, state => {\n      state.isLoading = true;\n    });\n    builder.addCase(LoginUser.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    });\n    builder.addCase(LoginUser.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    }); // Get User Login\n\n    builder.addCase(getMe.pending, state => {\n      state.isLoading = true;\n    });\n    builder.addCase(getMe.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    });\n    builder.addCase(getMe.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    });\n  }\n});\nexport const {\n  reset\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","user","isError","isSuccess","isLoading","message","LoginUser","thunkAPI","LogOut","delete","authSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","getMe","actions","reducer"],"sources":["C:/Users/user/OneDrive/Documents/ALL PROJECT/UAS-final/Login-Multi-Role-Frontend/src/features/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst initialState = {\r\n    user: null,\r\n    isError: false,\r\n    isSuccess: false,\r\n    isLoading: false,\r\n    message: \"\"\r\n}\r\n\r\nexport const LoginUser = createAsyncThunk(\"user/LoginUser\", async(user, thunkAPI) => {\r\n//     try {\r\n//         const response = await axios.post('http://localhost:5000/login', {\r\n//             email: user.email,\r\n//             password: user.password\r\n//         });\r\n//         return response.data;\r\n//     } catch (error) {\r\n//         if(error.response){\r\n//             const message = error.response.data.msg;\r\n//             return thunkAPI.rejectWithValue(message);\r\n//         }\r\n//     }\r\n// });\r\n\r\n// export const getMe = createAsyncThunk(\"user/getMe\", async(_, thunkAPI) => {\r\n//     try {\r\n//         const response = await axios.get('http://localhost:5000/me');\r\n//         return response.data;\r\n//     } catch (error) {\r\n//         if(error.response){\r\n//             const message = error.response.data.msg;\r\n//             return thunkAPI.rejectWithValue(message);\r\n//         }\r\n//     }\r\n});\r\n\r\nexport const LogOut = createAsyncThunk(\"user/LogOut\", async() => {\r\n    await axios.delete('http://localhost:5000/logout');\r\n});\r\n\r\nexport const authSlice = createSlice({\r\n    name: \"auth\",\r\n    initialState,\r\n    reducers:{\r\n        reset: (state) => initialState\r\n    },\r\n    extraReducers:(builder) =>{\r\n        builder.addCase(LoginUser.pending, (state) =>{\r\n            state.isLoading = true;\r\n        });\r\n        builder.addCase(LoginUser.fulfilled, (state, action) =>{\r\n            state.isLoading = false;\r\n            state.isSuccess = true;\r\n            state.user = action.payload;\r\n        });\r\n        builder.addCase(LoginUser.rejected, (state, action) =>{\r\n            state.isLoading = false;\r\n            state.isError = true;\r\n            state.message = action.payload;\r\n        })\r\n\r\n        // Get User Login\r\n        builder.addCase(getMe.pending, (state) =>{\r\n            state.isLoading = true;\r\n        });\r\n        builder.addCase(getMe.fulfilled, (state, action) =>{\r\n            state.isLoading = false;\r\n            state.isSuccess = true;\r\n            state.user = action.payload;\r\n        });\r\n        builder.addCase(getMe.rejected, (state, action) =>{\r\n            state.isLoading = false;\r\n            state.isError = true;\r\n            state.message = action.payload;\r\n        })\r\n    }\r\n});\r\n\r\nexport const {reset} = authSlice.actions;\r\nexport default authSlice.reducer;"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAE,IADW;EAEjBC,OAAO,EAAE,KAFQ;EAGjBC,SAAS,EAAE,KAHM;EAIjBC,SAAS,EAAE,KAJM;EAKjBC,OAAO,EAAE;AALQ,CAArB;AAQA,OAAO,MAAMC,SAAS,GAAGR,gBAAgB,CAAC,gBAAD,EAAmB,OAAMG,IAAN,EAAYM,QAAZ,KAAyB,CACrF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACC,CAzBwC,CAAlC;AA2BP,OAAO,MAAMC,MAAM,GAAGV,gBAAgB,CAAC,aAAD,EAAgB,YAAW;EAC7D,MAAMC,KAAK,CAACU,MAAN,CAAa,8BAAb,CAAN;AACH,CAFqC,CAA/B;AAIP,OAAO,MAAMC,SAAS,GAAGb,WAAW,CAAC;EACjCc,IAAI,EAAE,MAD2B;EAEjCX,YAFiC;EAGjCY,QAAQ,EAAC;IACLC,KAAK,EAAGC,KAAD,IAAWd;EADb,CAHwB;EAMjCe,aAAa,EAAEC,OAAD,IAAY;IACtBA,OAAO,CAACC,OAAR,CAAgBX,SAAS,CAACY,OAA1B,EAAoCJ,KAAD,IAAU;MACzCA,KAAK,CAACV,SAAN,GAAkB,IAAlB;IACH,CAFD;IAGAY,OAAO,CAACC,OAAR,CAAgBX,SAAS,CAACa,SAA1B,EAAqC,CAACL,KAAD,EAAQM,MAAR,KAAkB;MACnDN,KAAK,CAACV,SAAN,GAAkB,KAAlB;MACAU,KAAK,CAACX,SAAN,GAAkB,IAAlB;MACAW,KAAK,CAACb,IAAN,GAAamB,MAAM,CAACC,OAApB;IACH,CAJD;IAKAL,OAAO,CAACC,OAAR,CAAgBX,SAAS,CAACgB,QAA1B,EAAoC,CAACR,KAAD,EAAQM,MAAR,KAAkB;MAClDN,KAAK,CAACV,SAAN,GAAkB,KAAlB;MACAU,KAAK,CAACZ,OAAN,GAAgB,IAAhB;MACAY,KAAK,CAACT,OAAN,GAAgBe,MAAM,CAACC,OAAvB;IACH,CAJD,EATsB,CAetB;;IACAL,OAAO,CAACC,OAAR,CAAgBM,KAAK,CAACL,OAAtB,EAAgCJ,KAAD,IAAU;MACrCA,KAAK,CAACV,SAAN,GAAkB,IAAlB;IACH,CAFD;IAGAY,OAAO,CAACC,OAAR,CAAgBM,KAAK,CAACJ,SAAtB,EAAiC,CAACL,KAAD,EAAQM,MAAR,KAAkB;MAC/CN,KAAK,CAACV,SAAN,GAAkB,KAAlB;MACAU,KAAK,CAACX,SAAN,GAAkB,IAAlB;MACAW,KAAK,CAACb,IAAN,GAAamB,MAAM,CAACC,OAApB;IACH,CAJD;IAKAL,OAAO,CAACC,OAAR,CAAgBM,KAAK,CAACD,QAAtB,EAAgC,CAACR,KAAD,EAAQM,MAAR,KAAkB;MAC9CN,KAAK,CAACV,SAAN,GAAkB,KAAlB;MACAU,KAAK,CAACZ,OAAN,GAAgB,IAAhB;MACAY,KAAK,CAACT,OAAN,GAAgBe,MAAM,CAACC,OAAvB;IACH,CAJD;EAKH;AAnCgC,CAAD,CAA7B;AAsCP,OAAO,MAAM;EAACR;AAAD,IAAUH,SAAS,CAACc,OAA1B;AACP,eAAed,SAAS,CAACe,OAAzB"},"metadata":{},"sourceType":"module"}